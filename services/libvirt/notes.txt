debian configuration
	<features>
		<acpi/>
		<apic/>
		<vmport state="off"/>
	</features>
	<clock offset="utc">
		<timer name="rtc" tickpolicy="catchup"/>
		<timer name="pit" tickpolicy="delay"/>
		<timer name="hpet" present="no"/>
	</clock>
windows configuration
	<features>
		<acpi/>
		<apic/>
		<hyperv>
			<relaxed state="on"/>
			<vapic state="on"/>
			<spinlocks state="on" retries="8191"/>
		</hyperv>
		<vmport state="off"/>
	</features>
	<clock offset="localtime">
		<timer name="rtc" tickpolicy="catchup"/>
		<timer name="pit" tickpolicy="delay"/>
		<timer name="hpet" present="no"/>
		<timer name="hypervclock" present="yes"/>
	</clock>

sample role
	role: services/libvirt
	pools:
		disks: /mnt/pool2/virtual/disks
	domains:
		host4:
		type: kvm
		platform: { architecture: x86_64, chipset: q35, uefi: yes }
		hardware: { cpus: 2, memory: 1073741824 }
		storage:
		- type: volume
			device: { type: disk, name: sda, bus: virtio, boot: 1 }
			volume: { pool: disks, name: host4.img, size: 8589934592 }
		- type: file
			device: { type: cdrom, name: sdb, bus: sata, boot: 2 }
			path: /mnt/pool2/virtual/images/debian-11.3.0-amd64-netinst.iso
		interfaces:
		- { type: virtio, network: default }
		host5:
		type: kvm
		platform: { architecture: x86_64, chipset: q35, uefi: yes }
		hardware: { cpus: 4, memory: 8589934592 }
		storage:
		- type: volume
			device: { type: disk, name: sda, bus: virtio, boot: 1 }
			volume: { pool: disks, name: host5.img, size: 68719476736 }
		- type: file
			device: { type: cdrom, name: sdb, bus: sata, boot: 2 }
			path: /mnt/pool2/virtual/images/windows.iso
		- type: file
			device: { type: cdrom, name: sdc, bus: sata }
			path: /mnt/pool2/virtual/images/virtio-win-0.1.217.iso
		interfaces:
		- { type: virtio, network: default }

TODO
	consider only configuring pools, setting up machines via virt-manager
		maybe add ability to save xml configuration to ansible for persistence
	figure out level of detail of configuration
		- easy to add new machine by adding a few yaml lines
		- flexible configuration by supplying full xml definition
		- definition via yaml, but with most/all of the xml functionality exposed
	only specify domain options that libvirt does not infer on its own
	figure out backing storage configuration (recordsize, volume vs. file, raw vs. qcow2)
		recordsize
		zfs volume vs. file
		formats (raw vs. qcow2)
		caching mode
		discard options
	set up bridge networking
		https://wiki.libvirt.org/page/Networking
		https://wiki.debian.org/BridgeNetworkConnections
		set physical interface to manual
			iface enp3s0 inet manual
		do network configuration dhcp/static for physical interface on bridge instaed
			auto vmbr0
			iface vmbr0 inet static
				address 192.168.10.10/24
				gateway 192.168.10.1
				bridge-ports enp3s0
				bridge-stp off
				bridge-fd 0
