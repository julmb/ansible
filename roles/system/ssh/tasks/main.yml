- name: package
  ansible.builtin.apt: { name: openssh-server }
  when: ansible_os_family == "Debian"
  # TODO: hopefully there will be a win_capability module at some point
  #       https://github.com/ansible-collections/ansible.windows/issues/96
  #       https://github.com/ansible-collections/community.windows/issues/270
- name: capability
  ansible.windows.win_shell: |
    $result = Get-WindowsCapability -Online -Name OpenSSH.Server | Where-Object State -EQ Installed
    if (!$result) { Add-WindowsCapability -Online -Name OpenSSH.Server }
  become: yes
  become_method: runas
  vars: { ansible_become_user: "{{ ansible_user }}", ansible_become_pass: "{{ ansible_password }}" }
  register: result
  changed_when: result.stdout != ""
  when: ansible_os_family == "Windows"

- name: service
  ansible.builtin.service: { name: ssh, enabled: yes, state: started }
  when: ansible_os_family == "Debian"
- name: service
  ansible.windows.win_service: { name: sshd, start_mode: auto, state: started }
  when: ansible_os_family == "Windows"

- name: system
  ansible.builtin.include_tasks: system.yml
  when: system is defined
- name: users
  ansible.builtin.include_tasks: user.yml
  loop: "{{ users | dict2items }}"
  loop_control: { loop_var: user, label: "{{ user.key }}" }
  when: users is defined

- name: administrator authorized keys
  ansible.builtin.template: { src: authorized_keys, dest: /ProgramData/ssh/administrators_authorized_keys }
  vars: { authorized_keys: "{{ administrator.authorized_keys }}" }
  when: ansible_os_family == "Windows"
- name: administrator instantiate permissions
  ansible.windows.win_acl_inheritance: { path: /ProgramData/ssh/administrators_authorized_keys, reorganize: yes }
  when: ansible_os_family == "Windows"
- name: administrator restrict permissions
  ansible.windows.win_acl: { path: /ProgramData/ssh/administrators_authorized_keys, user: Authenticated Users, type: allow, rights: ReadAndExecute, state: absent }
  when: ansible_os_family == "Windows"

- name: flush handlers
  ansible.builtin.meta: flush_handlers
