- name: docker package
  ansible.builtin.apt: { pkg: [docker.io, docker-compose] }
- name: docker compose definition
  ansible.builtin.copy: { src: docker-compose.yml, dest: "{{ proxy.path }}/" }
- name: docker compose up
  community.docker.docker_compose: { project_src: "{{ proxy.path }}" }

- name: default configuration
  ansible.builtin.copy: { src: default.conf, dest: "{{ proxy.path }}/configuration/" }
  notify: restart service
- name: flush handlers
  ansible.builtin.meta: flush_handlers

- name: certbot package
  ansible.builtin.apt: { pkg: certbot }
- name: certbot
  ansible.builtin.command:
    cmd: certbot certonly --test-cert --non-interactive {{ agree_tos }} {{ email }} {{ installer }}
    creates: /etc/letsencrypt/live/{{ item.key }}/fullchain.pem
  vars:
    agree_tos: "{{ '--agree-tos' if proxy.acme.agree_tos is defined and proxy.acme.agree_tos }}"
    email: "{{ '--email {}'.format(proxy.acme.email) if proxy.acme.email is defined }}"
    installer: --webroot --webroot-path {{ proxy.path }}/webroot --domain {{ item.key }}
  loop: "{{ proxy.entries | dict2items }}"
- name: proxy configuration
  ansible.builtin.template: { src: proxy.conf, dest: "{{ proxy.path }}/configuration/{{ item.key }}.conf" }
  loop: "{{ proxy.entries | dict2items }}"
  notify: restart service
