- name: "{{ pool.key }} definition"
  ansible.builtin.shell: |
    before=$(virsh pool-dumpxml {{ pool.key }})
    beforei=$(virsh pool-dumpxml --inactive {{ pool.key }})
    virsh pool-define <(echo '{{ lookup('template', 'pool.xml') }}')
    result=$?
    after=$(virsh pool-dumpxml {{ pool.key }})
    afteri=$(virsh pool-dumpxml --inactive {{ pool.key }})
    if [[ "$before" != "$after" ]]; then echo "pool definition changed"; fi
    if [[ "$beforei" != "$afteri" ]]; then echo "inactive pool definition changed"; fi
    exit $result
  args: { executable: bash }
  register: result
  changed_when: "'pool definition changed' in result.stdout"
- name: "{{ pool.key }} activation"
  ansible.builtin.command: virsh pool-start {{ pool.key }}
  register: result
  failed_when: result.rc != 0 and 'already active' not in result.stderr
  changed_when: result.rc == 0
- name: "{{ pool.key }} volumes"
  ansible.builtin.include_tasks: volume.yml
  loop: "{{ pool.value.volumes | dict2items }}"
  when: pool.value.volumes is defined
