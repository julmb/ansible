{% if dnsmasq.address is defined %}
listen-address = {{ dnsmasq.address }}
{% endif %}

{% if dnsmasq.domain is defined %}
domain = {{ dnsmasq.domain }}
expand-hosts
{% endif %}

{% if dnsmasq.dhcp %}
dhcp-range = {{ dnsmasq.dhcp.start }}, {{ dnsmasq.dhcp.end }}, {{ dnsmasq.dhcp.duration }}

# Specify a subnet which can't be used for dynamic address allocation,
# is available for hosts with matching --dhcp-host lines. Note that
# dhcp-host declarations will be ignored unless there is a dhcp-range
# of some type for the subnet in question.
# In this case the netmask is implied (it comes from the network
# configuration on the machine running dnsmasq) it is possible to give
# an explicit netmask instead.
#dhcp-range=192.168.0.0,static

# Supply parameters for specified hosts using DHCP. There are lots
# of valid alternatives, so we will give examples of each. Note that
# IP addresses DO NOT have to be in the range given above, they just
# need to be on the same network. The order of the parameters in these
# do not matter, it's permissible to give name, address and MAC in any
# order.

{% for host, entry in dnsmasq.dhcp.hosts.items() %}
dhcp-host = {{ host }}, {{ entry.name }}, {{ entry.address }}
{% endfor %}

# Enable the address given for "judge" in /etc/hosts
# to be given to a machine presenting the name "judge" when
# it asks for a DHCP lease.
#dhcp-host=judge

dhcp-option = option:router, 192.168.0.1
dhcp-option = option:dns-server, 192.168.0.2

{% endif %}

# Set the cachesize here.
#cache-size=150

# Provide an alias for a "local" DNS name. Note that this _only_ works
# for targets which are names from DHCP or /etc/hosts. Give host
# "bert" another name, bertrand
#cname=bertand,bert
